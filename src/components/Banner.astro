<section class="banner">
    <div class="banner__content flex flex-column items-center">
        <img src="/images/logo.png" alt="Logo de Rubí Beauty Salon" />
        <h2 class="uppercase">Beauty Studio</h2>
    </div>
    <img
        src="/images/banner/1.png"
        loading="eager"
        decoding="async"
        data-speed="2"
        class="layer"
        aria-hidden="true"
    />
    <img
        src="/images/banner/2.png"
        loading="eager"
        decoding="async"
        data-speed="1"
        class="layer"
        aria-hidden="true"
    />
    <img
        src="/images/banner/3.png"
        loading="eager"
        decoding="async"
        data-speed="3"
        class="layer"
        aria-hidden="true"
    />
    <img
        src="/images/banner/4.png"
        loading="eager"
        decoding="async"
        data-speed="2"
        class="layer"
        aria-hidden="true"
    />
    <img
        src="/images/banner/5.png"
        loading="eager"
        decoding="async"
        data-speed="-3"
        class="layer"
        aria-hidden="true"
    />
    <img
        src="/images/banner/6.png"
        loading="eager"
        decoding="async"
        data-speed="-2"
        class="layer"
        aria-hidden="true"
    />
    <img
        src="/images/banner/7.png"
        loading="eager"
        decoding="async"
        data-speed="1"
        class="layer"
        aria-hidden="true"
    />
    <img
        src="/images/banner/8.png"
        loading="eager"
        decoding="async"
        data-speed="-1"
        class="layer"
        aria-hidden="true"
    />
</section>
<script>
    const layers = document.querySelectorAll(".layer");
    const banner = document.querySelector(".banner");

    // Función de paralaje optimizada
    function parallax(e: MouseEvent) {
        layers.forEach((layer) => {
            const speed = layer.getAttribute("data-speed");

            if (speed) {
                const x = (window.innerWidth - e.pageX * parseInt(speed)) / 100;
                const y =
                    (window.innerHeight - e.pageY * parseInt(speed)) / 100;

                const layerElement = layer as HTMLElement;
                layerElement.style.transform = `translateX(${x}px) translateY(${y}px)`;
            }
        });
    }

    function handleAnimationEnd() {
        layers.forEach((layer) => {
            const layerElement = layer as HTMLElement;
            layerElement.style.animation = "none";
        });
        document.addEventListener("mousemove", parallax);
    }

    // Función para iniciar la animación de movimiento
    function startMoveAnimation() {
        let cumulativeDelay = 0; // Inicializamos el retraso acumulativo

        layers.forEach((layer, index) => {
            const layerElement = layer as HTMLElement;
            const delay = (index + 1) * 0.2; // Calculamos el retraso individual

            layerElement.style.animation = `moveImages 8s ease-in-out infinite alternate`;
            layerElement.style.animationDelay = `${cumulativeDelay + delay}s`; // Aplicamos el retraso acumulativo más el retraso individual
            cumulativeDelay += delay; // Actualizamos el retraso acumulativo
        });
    }

    if (window.innerWidth > 768) {
        banner?.addEventListener("animationend", handleAnimationEnd);
    } else {
        banner?.addEventListener("animationend", startMoveAnimation);
    }
</script>
